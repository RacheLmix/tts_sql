-- ================================================
-- üß† TO√ÄN B·ªò SQL G·ªíM 9 Y√äU C·∫¶U T·ªêI ∆ØU CHUY√äN S√ÇU
-- ================================================

-- ‚úÖ Y√™u c·∫ßu 0: Schema C∆° B·∫£n
-- ‚úÖ B·∫£ng Users: L∆∞u th√¥ng tin ng∆∞·ªùi d√πng
CREATE TABLE IF NOT EXISTS Users (
  user_id INT PRIMARY KEY AUTO_INCREMENT,          -- ID t·ª± tƒÉng
  username VARCHAR(50) NOT NULL UNIQUE,            -- T√™n ƒëƒÉng nh·∫≠p duy nh·∫•t
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP   -- Ng√†y t·∫°o
);

-- ‚úÖ B·∫£ng Posts: L∆∞u b√†i ƒëƒÉng c·ªßa ng∆∞·ªùi d√πng
CREATE TABLE IF NOT EXISTS Posts (
  post_id INT PRIMARY KEY AUTO_INCREMENT,          -- ID b√†i vi·∫øt
  user_id INT NOT NULL,                            -- ID ng∆∞·ªùi ƒëƒÉng
  content TEXT,                                    -- N·ªôi dung b√†i vi·∫øt
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,  -- Th·ªùi gian ƒëƒÉng
  likes INT DEFAULT 0,                             -- S·ªë l∆∞·ª£t th√≠ch
  hashtags VARCHAR(100),                           -- Danh s√°ch hashtag th√¥
  FOREIGN KEY (user_id) REFERENCES Users(user_id), -- R√†ng bu·ªôc t·ªõi Users
  INDEX (created_at),                              -- TƒÉng t·ªëc truy v·∫•n theo th·ªùi gian
  FULLTEXT (hashtags)                              -- ‚úÖ Cho ph√©p t√¨m ki·∫øm fulltext hashtag
);

-- ‚úÖ B·∫£ng Follows: Quan h·ªá ng∆∞·ªùi theo d√µi
CREATE TABLE IF NOT EXISTS Follows (
  follower_id INT NOT NULL,                        -- Ng∆∞·ªùi theo d√µi
  followee_id INT NOT NULL,                        -- Ng∆∞·ªùi ƒë∆∞·ª£c theo d√µi
  PRIMARY KEY (follower_id, followee_id),          -- Kh√≥a ch√≠nh k√©p
  FOREIGN KEY (follower_id) REFERENCES Users(user_id),
  FOREIGN KEY (followee_id) REFERENCES Users(user_id)
);

-- ‚úÖ B·∫£ng PostViews: Ph√¢n v√πng theo th√°ng (ph·∫£i ch·ªânh l·∫°i theo y√™u c·∫ßu MySQL)
-- ‚ùó Kh√¥ng d√πng h√†m trong PARTITION BY, thay b·∫±ng c·ªôt partition_key INT (YYYYMM)
CREATE TABLE IF NOT EXISTS PostViews (
  view_id INT UNSIGNED AUTO_INCREMENT,             -- ID l∆∞·ª£t xem
  post_id INT,                                     -- ID b√†i vi·∫øt (kh√¥ng d√πng FK v√¨ b·ªã partition h·∫°n ch·∫ø)
  viewer_id INT,                                   -- ID ng∆∞·ªùi xem
  view_time TIMESTAMP,                             -- Th·ªùi ƒëi·ªÉm xem
  partition_key INT NOT NULL,                      -- YYYYMM ƒë·ªÉ d√πng l√†m ph√¢n v√πng
  PRIMARY KEY(view_id, partition_key)              -- MySQL y√™u c·∫ßu key ph·∫£i ch·ª©a c·ªôt partition
)
PARTITION BY RANGE (partition_key) (
  PARTITION p202407 VALUES LESS THAN (202408),     -- Partition cho th√°ng 07/2025
  PARTITION p202408 VALUES LESS THAN (202409),     -- Partition cho th√°ng 08/2025
  PARTITION pmax     VALUES LESS THAN MAXVALUE     -- Default partition
);

-- ‚úÖ B·∫£ng PostHashtags: chu·∫©n h√≥a hashtag
CREATE TABLE IF NOT EXISTS PostHashtags (
  post_id INT,                                     -- ID b√†i vi·∫øt
  hashtag VARCHAR(50),                             -- Hashtag ri√™ng bi·ªát
  PRIMARY KEY (post_id, hashtag),                  -- Kh√≥a ch√≠nh k√©p
  INDEX (hashtag),                                 -- TƒÉng t·ªëc t√¨m ki·∫øm hashtag
  FOREIGN KEY (post_id) REFERENCES Posts(post_id)
);

-- ‚úÖ B·∫£ng PopularPostsDaily: t·ªïng h·ª£p l∆∞·ª£t th√≠ch & view m·ªói ng√†y
CREATE TABLE IF NOT EXISTS PopularPostsDaily (
  post_id INT,
  report_date DATE,                                -- Ng√†y t·ªïng h·ª£p
  total_likes INT,                                 -- T·ªïng like h√¥m ƒë√≥
  total_views INT,                                 -- T·ªïng view h√¥m ƒë√≥
  PRIMARY KEY(post_id, report_date)
);

-- ‚úÖ B·∫£ng Likes: l∆∞u th√¥ng tin ng∆∞·ªùi like b√†i
CREATE TABLE IF NOT EXISTS Likes (
  user_id INT,                                     -- Ng∆∞·ªùi like
  post_id INT,                                     -- B√†i ƒë∆∞·ª£c like
  liked_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,    -- Th·ªùi ƒëi·ªÉm like
  PRIMARY KEY(user_id, post_id),                   -- Like duy nh·∫•t theo user + b√†i
  FOREIGN KEY (user_id) REFERENCES Users(user_id),
  FOREIGN KEY (post_id) REFERENCES Posts(post_id)
);


-- ‚úÖ Y√™u c·∫ßu 7: Stored Procedure t·ªëi ∆∞u Like
DELIMITER $$

CREATE PROCEDURE LikePost(
  IN in_user_id INT,
  IN in_post_id INT
)
BEGIN
  DECLARE already_liked INT;

  SELECT COUNT(*) INTO already_liked
  FROM Likes
  WHERE user_id = in_user_id AND post_id = in_post_id;

  IF already_liked = 0 THEN
    START TRANSACTION;
      INSERT INTO Likes(user_id, post_id) VALUES (in_user_id, in_post_id);
      UPDATE Posts SET likes = likes + 1 WHERE post_id = in_post_id;
    COMMIT;
  END IF;
END$$

DELIMITER ;

-- ‚úÖ Y√™u c·∫ßu 1: Truy v·∫•n l·∫•y 10 post ƒë∆∞·ª£c th√≠ch nh·∫•t h√¥m nay (g·ª£i √Ω cache)
SELECT post_id, content, likes
FROM Posts
WHERE DATE(created_at) = CURDATE()
ORDER BY likes DESC
LIMIT 10;

-- üëâ C√≥ th·ªÉ cache t·∫°i ·ª©ng d·ª•ng (Redis key: top_posts:YYYY-MM-DD) ho·∫∑c MEMORY TABLE n·∫øu MySQL

-- ‚úÖ Y√™u c·∫ßu 2: EXPLAIN ANALYZE + c·∫£i thi·ªán
-- Truy v·∫•n g·ªëc (c√≥ bottleneck):
-- EXPLAIN ANALYZE
SELECT * FROM Posts
WHERE hashtags LIKE '%fitness%'
ORDER BY created_at DESC
LIMIT 20;

-- ‚úÖ Gi·∫£i ph√°p: D√πng FULLTEXT index:
SELECT * FROM Posts
WHERE MATCH(hashtags) AGAINST('+fitness' IN BOOLEAN MODE)
ORDER BY created_at DESC
LIMIT 20;

-- ‚úÖ Y√™u c·∫ßu 3 (ti·∫øp): Truy v·∫•n th·ªëng k√™ s·ªë view theo th√°ng
SELECT 
  DATE_FORMAT(view_time, '%Y-%m') AS month,
  COUNT(*) AS views
FROM PostViews
WHERE view_time >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH)
GROUP BY month
ORDER BY month DESC;

-- ‚úÖ Y√™u c·∫ßu 6: Window Function ‚Äì RANK top 3 b√†i vi·∫øt m·ªói ng√†y
WITH DailyViews AS (
  SELECT 
    post_id,
    DATE(view_time) AS view_date,
    COUNT(*) AS total_views
  FROM PostViews
  GROUP BY post_id, DATE(view_time)
),
Ranked AS (
  SELECT *,
    RANK() OVER (PARTITION BY view_date ORDER BY total_views DESC) AS view_rank
  FROM DailyViews
)
SELECT *
FROM Ranked
WHERE view_rank <= 3
ORDER BY view_date DESC, view_rank;

-- ‚úÖ Y√™u c·∫ßu 8: B·∫≠t Slow Query Log
-- Ch·∫°y 1 l·∫ßn trong MySQL CLI:
-- SET GLOBAL slow_query_log = 1;
-- SET GLOBAL long_query_time = 1; -- log n·∫øu > 1 gi√¢y
-- SHOW VARIABLES LIKE 'slow_query_log_file';

-- Truy v·∫•n ch·∫≠m v√≠ d·ª•:
SELECT * FROM Posts WHERE hashtags LIKE '%fitness%';

-- ‚úÖ C·∫£i thi·ªán: Th√™m FULLTEXT index, tr√°nh % ƒë·∫ßu, th√™m LIMIT

-- ‚úÖ Y√™u c·∫ßu 9: S·ª≠ d·ª•ng OPTIMIZER_TRACE
SET optimizer_trace="enabled=on";

-- Truy v·∫•n ƒë·ªÉ ph√¢n t√≠ch
SELECT u.username, p.content
FROM users u
JOIN posts p ON u.user_id = p.user_id
WHERE p.created_at >= CURDATE() - INTERVAL 7 DAY
ORDER BY p.created_at DESC
LIMIT 10;

-- Truy xu·∫•t JSON k·∫ø ho·∫°ch truy v·∫•n:
SELECT trace FROM information_schema.OPTIMIZER_TRACE\G


INSERT INTO Users (username) VALUES
('alice'), ('bob'), ('charlie'), ('david'), ('emma'),
('fiona'), ('george'), ('harry'), ('ivy'), ('jack');

INSERT INTO Posts (user_id, content, hashtags, created_at, likes) VALUES
(1, 'Loving the gym vibes üí™', 'fitness,health', NOW(), 5),
(2, 'Morning run success! üèÉ‚Äç‚ôÄÔ∏è', 'fitness,motivation', NOW(), 8),
(3, 'Cooking something special üçù', 'food,homemade', NOW(), 2),
(4, 'Tech trends 2025 üîÆ', 'tech,ai', NOW() - INTERVAL 1 DAY, 4),
(5, 'Best sunset view ever üåÖ', 'travel,nature', NOW() - INTERVAL 2 DAY, 7),
(6, 'My pet is the cutest üê∂', 'pets,cute', NOW(), 3),
(7, 'Another day, another grind ‚òï', 'life,motivation', NOW(), 6),
(8, 'New recipe alert üî•', 'food,recipe', NOW(), 1),
(9, 'Trying yoga today üßò‚Äç‚ôÇÔ∏è', 'fitness,yoga', NOW(), 4),
(10, 'React vs Vue ‚Äì let''s go! ‚öîÔ∏è', 'tech,frontend', NOW(), 9),
(1, 'Nature walk üå≥', 'nature,relax', NOW() - INTERVAL 1 DAY, 0),
(2, 'Friday night chill üé∂', 'life,chill', NOW(), 5),
(3, 'Just finished reading Dune üìö', 'books,scifi', NOW(), 3),
(4, 'Beach vibes only üèñÔ∏è', 'travel,fun', NOW(), 6),
(5, 'AI just wrote my code üò±', 'tech,ai', NOW(), 8),
(6, 'Weekend plans?', 'life,weekend', NOW(), 2),
(7, 'My fitness journey begins', 'fitness', NOW(), 10),
(8, 'Caffeine saves lives ‚òï', 'coffee,life', NOW(), 1),
(9, 'Beautiful Hanoi nights üåÉ', 'travel,vietnam', NOW(), 4),
(10, 'New blog post up!', 'tech,writing', NOW(), 7);

INSERT INTO Likes (user_id, post_id) VALUES
(1, 1), (2, 2), (3, 2), (4, 4), (5, 5), (6, 6), (7, 7),
(8, 8), (9, 9), (10, 10), (1, 11), (2, 12), (3, 13),
(4, 14), (5, 15), (6, 16), (7, 17), (8, 18), (9, 19), (10, 20);

-- M·ªói post ƒë∆∞·ª£c xem v√†i l·∫ßn trong c√°c th√°ng kh√°c nhau
INSERT INTO PostViews (post_id, viewer_id, view_time, partition_key) VALUES
(1, 2, '2025-07-08 12:00:00', 202407),
(1, 3, '2025-07-08 13:00:00', 202407),
(2, 4, '2025-07-07 10:00:00', 202407),
(3, 5, '2025-06-15 09:00:00', 202406),
(4, 6, '2025-05-20 14:00:00', 202405),
(5, 7, '2025-04-10 18:00:00', 202404),
(6, 8, '2025-03-22 16:00:00', 202403),
(7, 9, '2025-02-28 08:00:00', 202402),
(8, 1, '2025-07-01 19:00:00', 202407),
(9, 2, '2025-07-03 20:00:00', 202407),
(10, 3, '2025-07-04 21:00:00', 202407),
(11, 4, '2025-07-05 10:00:00', 202407),
(12, 5, '2025-07-06 11:00:00', 202407),
(13, 6, '2025-07-07 12:00:00', 202407),
(14, 7, '2025-07-08 13:00:00', 202407),
(15, 8, '2025-07-08 14:00:00', 202407),
(16, 9, '2025-07-08 15:00:00', 202407),
(17, 10, '2025-07-08 16:00:00', 202407),
(18, 1, '2025-07-08 17:00:00', 202407),
(19, 2, '2025-07-08 18:00:00', 202407),
(20, 3, '2025-07-08 19:00:00', 202407);

-- b·∫°n c√≥ th·ªÉ copy v√† th√™m nhi·ªÅu rows n·∫øu c·∫ßn test nhi·ªÅu

INSERT INTO Follows (follower_id, followee_id) VALUES
(1, 2), (2, 3), (3, 4), (4, 5),
(5, 6), (6, 7), (7, 8), (8, 9),
(9, 10), (10, 1);

INSERT INTO PostHashtags (post_id, hashtag) VALUES
(1, 'fitness'), (1, 'health'),
(2, 'fitness'), (2, 'motivation'),
(3, 'food'), (3, 'homemade'),
(4, 'tech'), (4, 'ai'),
(5, 'travel'), (5, 'nature'),
(6, 'pets'), (6, 'cute'),
(7, 'life'), (7, 'motivation');
-- b·∫°n c√≥ th·ªÉ fill ti·∫øp t∆∞∆°ng t·ª±
INSERT INTO PopularPostsDaily (post_id, report_date, total_likes, total_views) VALUES
(1, '2025-07-08', 5, 10),
(2, '2025-07-08', 8, 8),
(3, '2025-07-08', 2, 5),
(4, '2025-07-07', 4, 6),
(5, '2025-07-06', 7, 9);
